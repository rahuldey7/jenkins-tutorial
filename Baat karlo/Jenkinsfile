pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'chat-app'
        DOCKER_TAG = 'latest'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} "./Baat karlo/"'
            }
        }
        stage('Run Docker Container') {
            steps {
                // Stop and remove the previous instance of the app container if it exists
                sh """
                if [ \$(docker ps -q -f name=${DOCKER_IMAGE}) ]; then
                    docker stop ${DOCKER_IMAGE} || true
                    docker rm ${DOCKER_IMAGE} || true
                fi
                """
                // Run the new container in detached mode
                sh 'docker run -d --name ${DOCKER_IMAGE} -p 8000:8000 ${DOCKER_IMAGE}:${DOCKER_TAG}'
            }
        }
    }
    post {
        always {
            sh 'docker ps -a' // Check the running containers
        }
        success {
            echo 'Pipeline completed successfully! The Django app is now running.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
            // Additional error handling can be added here
        }
    }
}






// pipeline {
//     agent {
//         docker {
//             image ''
//         }
//     }
//     stages {
//         stage('Checkout') {
//             steps {
//                 checkout scm
//             }
//         }
//         stage('Build') {
//             steps {
//                 sh 'docker build -t chat-app "./Baat karlo/"'
//             }
//         }
//         stage('Production') {
//             steps {
//                 sh 'docker run -p 8000:8000 chat-app'
//             }
//         }
//     }
// }